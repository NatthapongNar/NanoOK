{"version":3,"file":"index.js","sources":["../src/resizer.js","../src/index.js"],"sourcesContent":["/* @flow */\n\nimport * as React from 'react';\n\nconst styles = {\n  base: {\n    position: 'absolute',\n  },\n  top: {\n    width: '100%',\n    height: '10px',\n    top: '-5px',\n    left: '0px',\n    cursor: 'row-resize',\n  },\n  right: {\n    width: '10px',\n    height: '100%',\n    top: '0px',\n    right: '-5px',\n    cursor: 'col-resize',\n  },\n  bottom: {\n    width: '100%',\n    height: '10px',\n    bottom: '-5px',\n    left: '0px',\n    cursor: 'row-resize',\n  },\n  left: {\n    width: '10px',\n    height: '100%',\n    top: '0px',\n    left: '-5px',\n    cursor: 'col-resize',\n  },\n  topRight: {\n    width: '20px',\n    height: '20px',\n    position: 'absolute',\n    right: '-10px',\n    top: '-10px',\n    cursor: 'ne-resize',\n  },\n  bottomRight: {\n    width: '20px',\n    height: '20px',\n    position: 'absolute',\n    right: '-10px',\n    bottom: '-10px',\n    cursor: 'se-resize',\n  },\n  bottomLeft: {\n    width: '20px',\n    height: '20px',\n    position: 'absolute',\n    left: '-10px',\n    bottom: '-10px',\n    cursor: 'sw-resize',\n  },\n  topLeft: {\n    width: '20px',\n    height: '20px',\n    position: 'absolute',\n    left: '-10px',\n    top: '-10px',\n    cursor: 'nw-resize',\n  },\n};\n\nexport type Direction = 'top' | 'right' | 'bottom' | 'left' | 'topRight' | 'bottomRight' | 'bottomLeft' | 'topLeft';\n\nexport type OnStartCallback = (\n  e: SyntheticMouseEvent<HTMLDivElement> | SyntheticTouchEvent<HTMLDivElement>,\n  dir: Direction,\n) => void;\n\nexport type Props = {\n  direction: Direction;\n  className?: string;\n  replaceStyles?: { [key: string]: string | number };\n  onResizeStart: OnStartCallback;\n}\n\nexport default (props: Props): React.Element<'div'> => {\n  return (\n    <div\n      className={props.className}\n      style={{\n        ...styles.base,\n        ...styles[props.direction],\n        ...(props.replaceStyles || {}),\n      }}\n      onMouseDown={(e: SyntheticMouseEvent<HTMLDivElement>) => {\n        props.onResizeStart(e, props.direction);\n      }}\n      onTouchStart={(e: SyntheticTouchEvent<HTMLDivElement>) => {\n        props.onResizeStart(e, props.direction);\n      }}\n    />\n  );\n};\n","/* @flow */\n\nimport * as React from 'react';\nimport Resizer from './resizer';\n\nimport type { Direction, OnStartCallback } from './resizer';\n\nexport const BASE_ID = '__resizable_base';\n\nconst userSelectNone = {\n  userSelect: 'none',\n  MozUserSelect: 'none',\n  WebkitUserSelect: 'none',\n  MsUserSelect: 'none',\n};\n\nconst userSelectAuto = {\n  userSelect: 'auto',\n  MozUserSelect: 'auto',\n  WebkitUserSelect: 'auto',\n  MsUserSelect: 'auto',\n};\n\nexport type ResizeDirection = Direction;\n\nexport type Style = {\n  [key: string]: string | number;\n}\n\nexport type Enable = {\n  top?: boolean;\n  right?: boolean;\n  bottom?: boolean;\n  left?: boolean;\n  topRight?: boolean;\n  bottomRight?: boolean;\n  bottomLeft?: boolean;\n  topLeft?: boolean;\n}\n\nexport type HandleStyles = {\n  top?: Style;\n  right?: Style;\n  bottom?: Style;\n  left?: Style;\n  topRight?: Style;\n  bottomRight?: Style;\n  bottomLeft?: Style;\n  topLeft?: Style;\n}\n\nexport type HandleClassName = {\n  top?: string;\n  right?: string;\n  bottom?: string;\n  left?: string;\n  topRight?: string;\n  bottomRight?: string;\n  bottomLeft?: string;\n  topLeft?: string;\n}\n\nexport type Size = {\n  width: string | number;\n  height: string | number;\n}\n\ntype NumberSize = {\n  width: number;\n  height: number;\n}\n\nexport type ResizeCallback = (\n  event: MouseEvent | TouchEvent,\n  direction: Direction,\n  elementRef: React.ElementRef<'div'>,\n  delta: NumberSize,\n) => void;\n\nexport type ResizeStartCallback = (\n  e: SyntheticMouseEvent<HTMLDivElement> | SyntheticTouchEvent<HTMLDivElement>,\n  dir: Direction,\n  elementRef: React.ElementRef<'div'>,\n) => void;\n\nexport type ResizableProps = {\n  style?: Style;\n  className?: string;\n  grid?: [number, number];\n  bounds?: 'parent' | 'window' | HTMLElement;\n  size?: Size;\n  minWidth?: string | number;\n  minHeight?: string | number;\n  maxWidth?: string | number;\n  maxHeight?: string | number;\n  lockAspectRatio?: boolean;\n  enable?: Enable;\n  handleStyles?: HandleStyles;\n  handleClasses?: HandleClassName;\n  handleWrapperStyle?: Style;\n  handleWrapperClass?: string;\n  children?: React.Node;\n  onResizeStart?: ResizeStartCallback;\n  onResize?: ResizeCallback;\n  onResizeStop?: ResizeCallback;\n  defaultSize?: Size;\n}\n\ntype State = {\n  isResizing: boolean;\n  direction: Direction;\n  original: {\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n  };\n  width: number | string;\n  height: number | string;\n}\n\nconst clamp = (n: number, min: number, max: number): number => Math.max(Math.min(n, max), min);\nconst snap = (n: number, size: number): number => Math.round(n / size) * size;\n\nconst getStringSize = (n: number | string): string => {\n  if (n.toString().endsWith('px')) return n.toString();\n  if (n.toString().endsWith('%')) return n.toString();\n  return `${n}px`;\n};\n\nconst definedProps = [\n  'style', 'className', 'grid', 'bounds', 'size', 'defaultSize',\n  'minWidth', 'minHeight', 'maxWidth', 'maxHeight', 'lockAspectRatio',\n  'enable', 'handleStyles', 'handleClasses', 'handleWrapperStyle',\n  'handleWrapperClass', 'children', 'onResizeStart', 'onResize', 'onResizeStop',\n];\n\nexport default class Resizable extends React.Component<ResizableProps, State> {\n  resizable: React.ElementRef<'div'>;\n  onTouchMove: ResizeCallback;\n  onMouseMove: ResizeCallback;\n  onMouseUp: ResizeCallback;\n  onResizeStart: OnStartCallback;\n  baseSizeId: string;\n  extendsProps: { [key: string]: any };\n\n  static defaultProps = {\n    onResizeStart: () => { },\n    onResize: () => { },\n    onResizeStop: () => { },\n    enable: {\n      top: true,\n      right: true,\n      bottom: true,\n      left: true,\n      topRight: true,\n      bottomRight: true,\n      bottomLeft: true,\n      topLeft: true,\n    },\n    style: {},\n    grid: [1, 1],\n    lockAspectRatio: false,\n  }\n\n  constructor(props: ResizableProps) {\n    super(props);\n    this.state = {\n      isResizing: false,\n      width: typeof (this.propsSize && this.propsSize.width) === 'undefined'\n        ? 'auto'\n        : ((this.propsSize && this.propsSize.width): any),\n      height: typeof (this.propsSize && this.propsSize.height) === 'undefined'\n        ? 'auto'\n        : ((this.propsSize && this.propsSize.height): any),\n      direction: 'right',\n      original: {\n        x: 0,\n        y: 0,\n        width: 0,\n        height: 0,\n      },\n    };\n\n    this.updateExtendsProps(props);\n    this.onResizeStart = this.onResizeStart.bind(this);\n    this.onMouseMove = this.onMouseMove.bind(this);\n    this.onMouseUp = this.onMouseUp.bind(this);\n\n    if (typeof window !== 'undefined') {\n      window.addEventListener('mouseup', this.onMouseUp);\n      window.addEventListener('mousemove', this.onMouseMove);\n      window.addEventListener('touchmove', this.onMouseMove);\n      window.addEventListener('touchend', this.onMouseUp);\n    }\n  }\n\n  get parentNode(): HTMLElement {\n    return ((this.resizable: any).parentNode: any);\n  }\n\n  get propsSize(): ?Size {\n    return this.props.size || this.props.defaultSize;\n  }\n\n  updateExtendsProps(props: ResizableProps) {\n    this.extendsProps = Object.keys(props).reduce((acc, key) => {\n      if (definedProps.includes(key)) return acc;\n      acc[key] = props[key];\n      return acc;\n    }, {});\n  }\n\n  getParentSize(): { width: number, height: number } {\n    const parent = this.parentNode;\n    if (!(parent instanceof HTMLElement)) {\n      return { width: window.innerWidth, height: window.innerHeight };\n    }\n    const base = parent.querySelector(`* > .${BASE_ID}`);\n    if (!base) {\n      return { width: window.innerWidth, height: window.innerHeight };\n    }\n    return {\n      width: base.offsetWidth,\n      height: base.offsetHeight,\n    };\n  }\n\n  componentDidMount() {\n    const size = this.size;\n    this.setState({\n      width: this.state.width || size.width,\n      height: this.state.height || size.height,\n    });\n    const parent = this.parentNode;\n    if (!(parent instanceof HTMLElement)) return;\n    const base = parent.querySelector(`* > .${BASE_ID}`);\n    if (base) return;\n    const element = document.createElement('div');\n    element.className = BASE_ID;\n    element.style.width = '100%';\n    element.style.height = '100%';\n    element.style.position = 'relative';\n    element.style.transform = 'scale(0, 0)';\n    parent.appendChild(element);\n  }\n\n  componentWillReceiveProps(next: ResizableProps) {\n    this.updateExtendsProps(next);\n  }\n\n  componentWillUnmount() {\n    if (typeof window !== 'undefined') {\n      window.removeEventListener('mouseup', this.onMouseUp);\n      window.removeEventListener('mousemove', this.onMouseMove);\n      window.removeEventListener('touchmove', this.onMouseMove);\n      window.removeEventListener('touchend', this.onMouseUp);\n      const parent = this.parentNode;\n      if (!(parent instanceof HTMLElement)) return;\n      const base = parent.querySelector(`* > .${BASE_ID}`);\n      if (!base) return;\n      parent.removeChild(base);\n    }\n  }\n\n  onResizeStart(\n    event: SyntheticMouseEvent<HTMLDivElement> | SyntheticTouchEvent<HTMLDivElement>,\n    direction: Direction,\n  ) {\n    let clientX = 0;\n    let clientY = 0;\n    if (event.nativeEvent instanceof MouseEvent) {\n      clientX = event.nativeEvent.clientX;\n      clientY = event.nativeEvent.clientY;\n    } else if (event.nativeEvent instanceof TouchEvent) {\n      clientX = event.nativeEvent.touches[0].clientX;\n      clientY = event.nativeEvent.touches[0].clientY;\n    }\n    if (this.props.onResizeStart) {\n      this.props.onResizeStart(event, direction, (this.resizable: React.ElementRef<'div'>));\n    }\n    this.setState({\n      original: {\n        x: clientX,\n        y: clientY,\n        width: this.size.width,\n        height: this.size.height,\n      },\n      isResizing: true,\n      direction,\n    });\n  }\n\n  onMouseMove(event: MouseEvent | TouchEvent) {\n    if (!this.state.isResizing) return;\n    const clientX = event instanceof MouseEvent ? event.clientX : event.touches[0].clientX;\n    const clientY = event instanceof MouseEvent ? event.clientY : event.touches[0].clientY;\n    const { direction, original, width, height } = this.state;\n    const { lockAspectRatio } = this.props;\n    let { maxWidth, maxHeight, minWidth, minHeight } = this.props;\n\n    // TODO: refactor\n    const parentSize = this.getParentSize();\n    if (maxWidth && typeof maxWidth === 'string' && maxWidth.endsWith('%')) {\n      const ratio = Number(maxWidth.replace('%', '')) / 100;\n      maxWidth = parentSize.width * ratio;\n    }\n    if (maxHeight && typeof maxHeight === 'string' && maxHeight.endsWith('%')) {\n      const ratio = Number(maxHeight.replace('%', '')) / 100;\n      maxHeight = parentSize.height * ratio;\n    }\n    if (minWidth && typeof minWidth === 'string' && minWidth.endsWith('%')) {\n      const ratio = Number(minWidth.replace('%', '')) / 100;\n      minWidth = parentSize.width * ratio;\n    }\n    if (minHeight && typeof minHeight === 'string' && minHeight.endsWith('%')) {\n      const ratio = Number(minHeight.replace('%', '')) / 100;\n      minHeight = parentSize.height * ratio;\n    }\n    maxWidth = typeof maxWidth === 'undefined' ? undefined : Number(maxWidth);\n    maxHeight = typeof maxHeight === 'undefined' ? undefined : Number(maxHeight);\n    minWidth = typeof minWidth === 'undefined' ? undefined : Number(minWidth);\n    minHeight = typeof minHeight === 'undefined' ? undefined : Number(minHeight);\n\n    const ratio = original.height / original.width;\n    let newWidth = original.width;\n    let newHeight = original.height;\n    if (/right/i.test(direction)) {\n      newWidth = original.width + (clientX - original.x);\n      if (lockAspectRatio) newHeight = newWidth * ratio;\n    }\n    if (/left/i.test(direction)) {\n      newWidth = original.width - (clientX - original.x);\n      if (lockAspectRatio) newHeight = newWidth * ratio;\n    }\n    if (/bottom/i.test(direction)) {\n      newHeight = original.height + (clientY - original.y);\n      if (lockAspectRatio) newWidth = newHeight / ratio;\n    }\n    if (/top/i.test(direction)) {\n      newHeight = original.height - (clientY - original.y);\n      if (lockAspectRatio) newWidth = newHeight / ratio;\n    }\n\n    if (this.props.bounds === 'parent') {\n      const parent = this.parentNode;\n      if (parent instanceof HTMLElement) {\n        const parentRect = parent.getBoundingClientRect();\n        const parentLeft = parentRect.left;\n        const parentTop = parentRect.top;\n        const { left, top } = this.resizable.getBoundingClientRect();\n        const boundWidth = parent.offsetWidth + (parentLeft - left);\n        const boundHeight = parent.offsetHeight + (parentTop - top);\n        maxWidth = maxWidth && maxWidth < boundWidth ? maxWidth : boundWidth;\n        maxHeight = maxHeight && maxHeight < boundHeight ? maxHeight : boundHeight;\n      }\n    } else if (this.props.bounds === 'window') {\n      if (typeof window !== 'undefined') {\n        const { left, top } = this.resizable.getBoundingClientRect();\n        const boundWidth = window.innerWidth - left;\n        const boundHeight = window.innerHeight - top;\n        maxWidth = maxWidth && maxWidth < boundWidth ? maxWidth : boundWidth;\n        maxHeight = maxHeight && maxHeight < boundHeight ? maxHeight : boundHeight;\n      }\n    } else if (this.props.bounds instanceof HTMLElement) {\n      const targetRect = this.props.bounds.getBoundingClientRect();\n      const targetLeft = targetRect.left;\n      const targetTop = targetRect.top;\n      const { left, top } = this.resizable.getBoundingClientRect();\n      if (!(this.props.bounds instanceof HTMLElement)) return;\n      const boundWidth = this.props.bounds.offsetWidth + (targetLeft - left);\n      const boundHeight = this.props.bounds.offsetHeight + (targetTop - top);\n      maxWidth = maxWidth && maxWidth < boundWidth ? maxWidth : boundWidth;\n      maxHeight = maxHeight && maxHeight < boundHeight ? maxHeight : boundHeight;\n    }\n\n    const computedMinWidth = (typeof minWidth === 'undefined' || minWidth < 10) ? 10 : minWidth;\n    const computedMaxWidth = (typeof maxWidth === 'undefined' || maxWidth < 0) ? newWidth : maxWidth;\n    const computedMinHeight = (typeof minHeight === 'undefined' || minHeight < 10) ? 10 : minHeight;\n    const computedMaxHeight = (typeof maxHeight === 'undefined' || maxHeight < 0) ? newHeight : maxHeight;\n\n    if (lockAspectRatio) {\n      const lockedMinWidth = computedMinWidth > computedMinHeight / ratio ? computedMinWidth : computedMinHeight / ratio;\n      const lockedMaxWidth = computedMaxWidth < computedMaxHeight / ratio ? computedMaxWidth : computedMaxHeight / ratio;\n      const lockedMinHeight = computedMinHeight > computedMinWidth * ratio ? computedMinHeight : computedMinWidth * ratio;\n      const lockedMaxHeight = computedMaxHeight < computedMaxWidth * ratio ? computedMaxHeight : computedMaxWidth * ratio;\n      newWidth = clamp(newWidth, lockedMinWidth, lockedMaxWidth);\n      newHeight = clamp(newHeight, lockedMinHeight, lockedMaxHeight);\n    } else {\n      newWidth = clamp(newWidth, computedMinWidth, computedMaxWidth);\n      newHeight = clamp(newHeight, computedMinHeight, computedMaxHeight);\n    }\n    if (this.props.grid) {\n      newWidth = snap(newWidth, this.props.grid[0]);\n    }\n    if (this.props.grid) {\n      newHeight = snap(newHeight, this.props.grid[1]);\n    }\n\n    const delta = {\n      width: newWidth - original.width,\n      height: newHeight - original.height,\n    };\n\n    if (width && typeof width === 'string' && width.endsWith('%')) {\n      const percent = (newWidth / parentSize.width) * 100;\n      newWidth = `${percent}%`;\n    }\n\n    if (height && typeof height === 'string' && height.endsWith('%')) {\n      const percent = (newHeight / parentSize.height) * 100;\n      newHeight = `${percent}%`;\n    }\n\n    this.setState({\n      width: width !== 'auto' || typeof this.props.width === 'undefined' ? newWidth : 'auto',\n      height: height !== 'auto' || typeof this.props.height === 'undefined' ? newHeight : 'auto',\n    });\n\n    if (this.props.onResize) {\n      this.props.onResize(event, direction, this.resizable, delta);\n    }\n  }\n\n  onMouseUp(event: MouseEvent | TouchEvent) {\n    const { isResizing, direction, original } = this.state;\n    if (!isResizing) return;\n    const delta = {\n      width: this.size.width - original.width,\n      height: this.size.height - original.height,\n    };\n    if (this.props.onResizeStop) {\n      this.props.onResizeStop(event, direction, this.resizable, delta);\n    }\n    if (this.props.size) {\n      this.setState(this.props.size);\n    }\n    this.setState({ isResizing: false });\n  }\n\n  get size(): NumberSize {\n    let width = 0;\n    let height = 0;\n    if (typeof window !== 'undefined') {\n      width = this.resizable.offsetWidth;\n      height = this.resizable.offsetHeight;\n    }\n    return { width, height };\n  }\n\n  get sizeStyle(): { width: string, height: string } {\n    const { size } = this.props;\n    const getSize = (key: 'width' | 'height'): string => {\n      if (typeof this.state[key] === 'undefined' || this.state[key] === 'auto') return 'auto';\n      if (this.propsSize && this.propsSize[key] && this.propsSize[key].toString().endsWith('%')) {\n        if (this.state[key].toString().endsWith('%')) return this.state[key].toString();\n        const parentSize = this.getParentSize();\n        const value = Number(this.state[key].toString().replace('px', ''));\n        const percent = (value / parentSize[key]) * 100;\n        return `${percent}%`;\n      }\n      return getStringSize(this.state[key]);\n    };\n    const width = ((size && size.width) && !this.state.isResizing)\n      ? getStringSize(size.width)\n      : getSize('width');\n    const height = ((size && size.height) && !this.state.isResizing)\n      ? getStringSize(size.height)\n      : getSize('height');\n    return { width, height };\n  }\n\n  updateSize(size: Size) {\n    this.setState({ width: size.width, height: size.height });\n  }\n\n  renderResizer(): React.Node {\n    const { enable, handleStyles, handleClasses, handleWrapperStyle, handleWrapperClass } = this.props;\n    if (!enable) return null;\n    const resizers = Object.keys(enable).map((dir: Direction): React$Node => {\n      if (enable[dir] !== false) {\n        return (\n          <Resizer\n            key={dir}\n            direction={dir}\n            onResizeStart={this.onResizeStart}\n            replaceStyles={handleStyles && handleStyles[dir]}\n            className={handleClasses && handleClasses[dir]}\n          />\n        );\n      }\n      return null;\n    });\n\n    // #93 Wrap the resize box in span (will not break 100% width/height)\n    return (\n      <span\n        className={handleWrapperClass}\n        style={handleWrapperStyle}\n      >\n        {resizers}\n      </span>);\n  }\n\n  render(): React.Node {\n    const userSelect = this.state.isResizing ? userSelectNone : userSelectAuto;\n    return (\n      <div\n        ref={(c: React.ElementRef<'div'> | null) => { this.resizable = c; }}\n        style={{\n          position: 'relative',\n          ...userSelect,\n          ...this.props.style,\n          ...this.sizeStyle,\n          maxWidth: this.props.maxWidth,\n          maxHeight: this.props.maxHeight,\n          minWidth: this.props.minWidth,\n          minHeight: this.props.minHeight,\n          boxSizing: 'border-box',\n        }}\n        className={this.props.className}\n        {...this.extendsProps}\n      >\n        {this.props.children}\n        {this.renderResizer()}\n      </div>\n    );\n  }\n}\n"],"names":["styles","props","React.createElement","className","base","direction","replaceStyles","e","onResizeStart","BASE_ID","userSelectNone","userSelectAuto","clamp","n","min","max","Math","snap","size","round","getStringSize","toString","endsWith","definedProps","Resizable","state","propsSize","width","height","updateExtendsProps","bind","onMouseMove","onMouseUp","window","addEventListener","extendsProps","Object","keys","reduce","acc","key","includes","parent","parentNode","HTMLElement","innerWidth","innerHeight","querySelector","offsetWidth","offsetHeight","setState","element","document","createElement","style","position","transform","appendChild","next","removeEventListener","removeChild","event","clientX","clientY","nativeEvent","MouseEvent","TouchEvent","touches","resizable","isResizing","original","lockAspectRatio","maxWidth","maxHeight","minWidth","minHeight","parentSize","getParentSize","ratio","Number","replace","undefined","newWidth","newHeight","test","x","y","bounds","parentRect","getBoundingClientRect","parentLeft","left","parentTop","top","boundWidth","boundHeight","targetRect","targetLeft","targetTop","computedMinWidth","computedMaxWidth","computedMinHeight","computedMaxHeight","lockedMinWidth","lockedMaxWidth","lockedMinHeight","lockedMaxHeight","grid","delta","percent","onResize","onResizeStop","enable","handleStyles","handleClasses","handleWrapperStyle","handleWrapperClass","resizers","map","dir","userSelect","c","sizeStyle","children","renderResizer","defaultSize","getSize","value","React","defaultProps"],"mappings":"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"}